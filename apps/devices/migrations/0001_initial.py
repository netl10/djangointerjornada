# Generated by Django 4.2.7 on 2025-10-09 20:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Nome do Dispositivo"
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        choices=[("primary", "Primário"), ("secondary", "Secundário")],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(verbose_name="Endereço IP"),
                ),
                ("port", models.IntegerField(verbose_name="Porta")),
                ("username", models.CharField(max_length=100, verbose_name="Usuário")),
                ("password", models.CharField(max_length=255, verbose_name="Senha")),
                (
                    "use_https",
                    models.BooleanField(default=False, verbose_name="Usar HTTPS"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Ativo"),
                            ("inactive", "Inativo"),
                            ("maintenance", "Manutenção"),
                            ("error", "Erro"),
                        ],
                        default="inactive",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(default=True, verbose_name="Habilitado"),
                ),
                (
                    "connection_timeout",
                    models.IntegerField(
                        default=15, verbose_name="Timeout de Conexão (s)"
                    ),
                ),
                (
                    "request_timeout",
                    models.IntegerField(
                        default=10, verbose_name="Timeout de Requisição (s)"
                    ),
                ),
                (
                    "max_reconnection_attempts",
                    models.IntegerField(
                        default=10, verbose_name="Máximo de Tentativas de Reconexão"
                    ),
                ),
                (
                    "last_connection",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Última Conexão"
                    ),
                ),
                (
                    "last_error",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Último Erro"
                    ),
                ),
                (
                    "error_count",
                    models.IntegerField(default=0, verbose_name="Contador de Erros"),
                ),
                (
                    "success_count",
                    models.IntegerField(default=0, verbose_name="Contador de Sucessos"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dispositivo",
                "verbose_name_plural": "Dispositivos",
                "ordering": ["device_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="DeviceConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "monitor_interval",
                    models.IntegerField(
                        default=3, verbose_name="Intervalo de Monitoramento (s)"
                    ),
                ),
                (
                    "log_retention_days",
                    models.IntegerField(
                        default=30, verbose_name="Retenção de Logs (dias)"
                    ),
                ),
                (
                    "api_endpoints",
                    models.JSONField(default=dict, verbose_name="Endpoints da API"),
                ),
                (
                    "authentication_method",
                    models.CharField(
                        default="token",
                        max_length=50,
                        verbose_name="Método de Autenticação",
                    ),
                ),
                (
                    "data_format",
                    models.CharField(
                        default="json", max_length=50, verbose_name="Formato de Dados"
                    ),
                ),
                (
                    "encoding",
                    models.CharField(
                        default="utf-8", max_length=20, verbose_name="Codificação"
                    ),
                ),
                (
                    "cache_enabled",
                    models.BooleanField(default=True, verbose_name="Cache Habilitado"),
                ),
                (
                    "cache_duration",
                    models.IntegerField(
                        default=60, verbose_name="Duração do Cache (s)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "device",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configuration",
                        to="devices.device",
                        verbose_name="Dispositivo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuração de Dispositivo",
                "verbose_name_plural": "Configurações de Dispositivos",
            },
        ),
        migrations.CreateModel(
            name="DeviceSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_token",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Token de Sessão",
                    ),
                ),
                ("is_active", models.BooleanField(default=False, verbose_name="Ativa")),
                ("started_at", models.DateTimeField(verbose_name="Iniciada em")),
                (
                    "ended_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Finalizada em"
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Última Atividade"
                    ),
                ),
                (
                    "requests_count",
                    models.IntegerField(
                        default=0, verbose_name="Número de Requisições"
                    ),
                ),
                (
                    "errors_count",
                    models.IntegerField(default=0, verbose_name="Número de Erros"),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="devices.device",
                        verbose_name="Dispositivo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sessão de Dispositivo",
                "verbose_name_plural": "Sessões de Dispositivos",
                "ordering": ["-started_at"],
                "indexes": [
                    models.Index(
                        fields=["device", "is_active"],
                        name="devices_dev_device__bc5919_idx",
                    ),
                    models.Index(
                        fields=["started_at"], name="devices_dev_started_d3887f_idx"
                    ),
                    models.Index(
                        fields=["session_token"], name="devices_dev_session_1249a8_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DeviceLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "log_type",
                    models.CharField(
                        choices=[
                            ("connection", "Conexão"),
                            ("authentication", "Autenticação"),
                            ("data_fetch", "Busca de Dados"),
                            ("error", "Erro"),
                            ("maintenance", "Manutenção"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Log",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("DEBUG", "Debug"),
                            ("INFO", "Informação"),
                            ("WARNING", "Aviso"),
                            ("ERROR", "Erro"),
                            ("CRITICAL", "Crítico"),
                        ],
                        max_length=10,
                        verbose_name="Nível",
                    ),
                ),
                ("message", models.TextField(verbose_name="Mensagem")),
                (
                    "details",
                    models.JSONField(blank=True, default=dict, verbose_name="Detalhes"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="devices.device",
                        verbose_name="Dispositivo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Dispositivo",
                "verbose_name_plural": "Logs de Dispositivos",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["device", "timestamp"],
                        name="devices_dev_device__bea555_idx",
                    ),
                    models.Index(
                        fields=["log_type"], name="devices_dev_log_typ_4e0698_idx"
                    ),
                    models.Index(fields=["level"], name="devices_dev_level_af861f_idx"),
                    models.Index(
                        fields=["timestamp"], name="devices_dev_timesta_189c80_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="device",
            index=models.Index(
                fields=["device_type"], name="devices_dev_device__0d8d82_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="device",
            index=models.Index(fields=["status"], name="devices_dev_status_bbf58f_idx"),
        ),
        migrations.AddIndex(
            model_name="device",
            index=models.Index(
                fields=["is_enabled"], name="devices_dev_is_enab_7fe094_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="device",
            index=models.Index(
                fields=["ip_address", "port"], name="devices_dev_ip_addr_af2d19_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="device",
            unique_together={("ip_address", "port")},
        ),
    ]
